@using Castellano.Helpers
@using Castellano.Web.UI.Helper

@model Castellano.Web.UI.Areas.Administracion.Models.MenuItem

@{
    ViewBag.Title = "ItemsMenu";
    Layout = "~/Views/Shared/_LayoutLogged.cshtml";
}

<div class="panel panel-default panel-default-fe">
    <div class="panel-heading panel-heading-fe">
        <h4>Administración de ítems de menú</h4>
    </div>
    <div class="panel-body">
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(x => x.AplicacionId, new { @for = "aplicacion", @class = "col-sm-4 control-label" })
                <div class="col-sm-5">
                    @Html.DropDownListFor(x => x.AplicacionId, Castellano.Membresia.Aplicacion.Aplicaciones, new { @id = "aplicacion", @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-7 col-sm-3">
                    <button id="cancelOrder" class="btn btn-danger">Cancelar</button>
                    <button id="saveOrder" class="btn btn-primary">Guardar</button>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-md-offset-3">
            <span id="menuItems" />
        </div>
    </div>
</div>

<form id="modalForm">

    @Html.AntiForgeryToken()

    @Html.Hidden("aplicacionId")

    <div id="form-primary" class="md-modal colored-header success md-effect-9">
        <div class="md-content">
            <div class="modal-header">
                <h3>Aplicación</h3>
                <button type="button" data-dismiss="modal" aria-hidden="true" class="close md-close">×</button>
            </div>
            <div class="modal-body form">
                @Html.AntiForgeryToken()

                @Html.Hidden("menuItemId")

                <div class="col-md-7">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.NombreAplicacion, new { @for = "nombreAplicacion", @class = "control-label" })
                                @Html.TextBoxFor(x => x.NombreAplicacion, new { @class = "form-control", @id = "nombreAplicacion", @disabled = "false" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Titulo, new { @for = "titulo", @class = "control-label" })
                                @Html.TextBoxFor(x => x.Titulo, new { @class = "form-control", @id = "titulo", @placeholder = "Titulo", @maxLength = "80" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Nombre, new { @for = "nombre", @class = "control-label" })
                                @Html.TextBoxFor(x => x.Nombre, new { @class = "form-control", @id = "nombre", @placeholder = "Nombre", @maxLength = "80" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.ToolTip, new { @for = "toolTip", @class = "control-label" })
                                @Html.TextAreaFor(x => x.ToolTip, new { @class = "form-control", @id = "toolTip", @placeholder = "ToolTip" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Informacion, new { @for = "informacion", @class = "control-label" })
                                @Html.TextAreaFor(x => x.Informacion, new { @class = "form-control", @id = "informacion", @placeholder = "Información" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Icono, new { @for = "icono", @class = "control-label" })
                                @Html.TextBoxFor(x => x.Icono, new { @class = "form-control", @id = "icono", @placeholder = "Ícono", @maxLength = "70" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Url, new { @for = "url", @class = "control-label" })
                                @Html.TextBoxFor(x => x.Url, new { @class = "form-control", @id = "url", @placeholder = "URL", @maxLength = "256", @disabled = "false" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="checkbox">
                                    <label>
                                        @Html.CheckBoxFor(m => m.Visible)
                                        @Html.LabelFor(m => m.Visible)
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-5">
                    <div id="tree" class="scrollDivMenu">
                        @Html.TreeViewMenu()
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" data-dismiss="modal" class="btn btn-danger btn-flat md-close">Cancelar</button>
                    <button type="submit" data-dismiss="modal" class="btn btn-primary btn-flat">Guardar</button>
                </div>
            </div>
        </div>
    </div>
    <div class="md-overlay"></div>
</form>

@Html.Hidden("menuJson")

@Scripts.Render("~/Content/js/jquery.nestable")

<script type="text/javascript">

    jQuery(document).ready(function () {

        var validator = $('#modalForm').validate({

            errorClass: 'errorText',
            validClass: 'validText',
            errorElement: 'em',
            rules: {
                Nombre: {
                    required: true,
                },
                Titulo: {
                    required: true
                },
                Url: {
                    required: true
                }
            },
            messages: {
                Nombre: {
                    required: 'Ingrese el nombre'
                },
                Titulo: {
                    required: 'Ingrese el título'
                },
                Url: {
                    required: 'Seleccione una URL'
                }
            },
            highlight: function (element, errorClass, validClass) {
                $(element).closest('.field').addClass(errorClass).removeClass(validClass);
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).closest('.field').removeClass(errorClass).addClass(validClass);
            },
            errorPlacement: function (error, element) {
                error.insertAfter(element.parent());
            },
            submitHandler: function (form) {

                var menuItemId = $('#menuItemId').val();

                if (menuItemId == "") {

                    menuItemId = generateId();
                }

                var obj = {
                    aplicacionId: $('#aplicacion').val(),
                    menuItemId: menuItemId,
                    id: menuItemId,
                    nombre: $('#nombre').val(),
                    titulo: $('#titulo').val(),
                    toolTip: $('#toolTip').val(),
                    informacion: $('#informacion').val(),
                    faIcon: $('#faIcon').val(),
                    url: $('#url').val(),
                    visible: $("#visible").prop("checked"),
                    muestraMenus: true,
                    publico: false,
                    orden: 0
                };

                $.ajax({
                    type: "POST",
                    url: "/Administracion/Admin/ItemsMenu",
                    data: obj,
                    success: function () {

                        carga();

                        menu();
                    },
                    error: function (data) {

                        swal("Error!", "Se ha producido un error al registrar la información", "error");
                    }
                });
            }
        });

        $('#aplicacion').change(function () {

            if ($(this).val() == '-1') {

                $('#menuItems').html('');
            }
            else {

                carga();
            }
        })

        $(document).on('click', 'a[typeButton=Add]', function () {

            var menuItemId = $(this).attr('data-value');

            $.getJSON('/Administracion/Admin/ItemsMenu/' + $('#aplicacion').val() + '/' + menuItemId, function (data) {

                popUp(menuItemId);

                $('#menuItemId').val(menuItemId);
                $('#nombre').val(data.Nombre);
                $('#titulo').val(data.Titulo);
                $('#toolTip').val(data.ToolTip);
                $('#informacion').val(data.Informacion);
                $('#faIcon').val(data.Fa_Icon);
                $('#url').val(data.Url);
                $("#visible").prop("checked", data.Visible);
            });

        });

        $(document).on('click', 'a[typeButton=Edit]', function () {

            popUp();

        });

        $(document).on('click', 'a[typeButton=Delete]', function () {

            alert('delete');

        });

        $('#cancelOrder').click(function () {

            //alert('aqui');

            $('#menu').nestable('destroy');

        });

        $('#saveOrder').click(function () {

            //var obj = JSON.stringify(eval("(" + $('#menuJson').val() + ")"));

            var obj = {
                data: JSON.stringify(eval("(" + $('#menuJson').val() + ")"))
            };

            $.ajax({
                type: "POST",
                url: "/Administracion/Admin/GetOrder",
                data: obj,
                success: function () {

                    swal("Listo!", "El orden fue guardado correctamente", "success");
                },
                error: function (data) {

                    swal("Error!", "Se ha producido un error al registrar el orden", "error");
                }
            });
        });

        $('label.tree-toggler').click(function () {
            var icon = $(this).children(".fa");
            if (icon.hasClass("fa-folder-open-o")) {
                icon.removeClass("fa-folder-open-o").addClass("fa-folder-o");
            } else {
                icon.removeClass("fa-folder-o").addClass("fa-folder-open-o");
            }

            $(this).parent().children('ul.tree').toggle(300, function () {
                $(this).parent().toggleClass("open");
                $(".tree .nscroller").nanoScroller({ preventPageScrolling: true });
            });
        });

        $('#path a[data-value]').on('click', function () {

            $('#url').val($(this).attr('data-value'));

        });
    });

    function menu() {

        var updateOutput = function (e) {

            if (e.length) {
                var a = e;
            }
            else {
                var b = $(e.target);
            }

            var list = e.length ? e : $(e.target);

            output = list.data('output');

            if (output != null) {

                if (window.JSON) {

                    output.val(window.JSON.stringify(list.nestable('serialize')));

                } else {

                    output.val('JSON browser support required for this demo.');
                }
            }

            $('.md-trigger').modalEffects();
        };

        $('#menu').nestable({
            group: 1
        }).on('change', updateOutput);

        updateOutput($('#menu').data('output', $('#menuJson')));
    }

    function carga() {

        $.getJSON('/Administracion/Admin/GetItemsMenu/' + $('#aplicacion').val(), function (data) {

            $('#menuItems').html(data);

            menu();
        });
    }

    function popUp() {

        var form = $('#modal-form');

        $('#nombreAplicacion').val($('#aplicacion option:selected').text());

        $('#menuItemId').val("");
        $('#nombre').val("");
        $('#titulo').val("");
        $('#toolTip').val("");
        $('#informacion').val("");
        $('#faIcon').val("");
        $('#url').val("");
        $("#visible").prop("checked", false);

        form.find(".state-error").removeClass("state-error");
        form.find(".state-success").removeClass("state-success");
        form.find("em").remove();
    }
</script>